// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type CreateLinkRequest struct {
	CustomerDetails LinkCustomerDetailsEntity `json:"customer_details"`
	// Amount to be collected using this link. Provide upto two decimals for paise.
	LinkAmount float64 `json:"link_amount"`
	// If "true", reminders will be sent to customers for collecting payments.
	LinkAutoReminders *bool `json:"link_auto_reminders,omitempty"`
	// Currency for the payment link. Default is INR. Contact care@cashfree.com to enable new currencies.
	LinkCurrency string `json:"link_currency"`
	// Time after which the link expires. Customers will not be able to make the payment beyond the time specified here. You can provide them in a valid ISO 8601 time format. Default is 30 days.
	LinkExpiryTime *string `json:"link_expiry_time,omitempty"`
	// Unique Identifier (provided by merchant) for the Link. Alphanumeric and only - and _ allowed (50 character limit). Use this for other link-related APIs.
	LinkID   string          `json:"link_id"`
	LinkMeta *LinkMetaEntity `json:"link_meta,omitempty"`
	// Minimum amount in first installment that needs to be paid by the customer if partial payments are enabled. This should be less than the link_amount.
	LinkMinimumPartialAmount *float64 `json:"link_minimum_partial_amount,omitempty"`
	// Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs
	LinkNotes  map[string]string `json:"link_notes,omitempty"`
	LinkNotify *LinkNotifyEntity `json:"link_notify,omitempty"`
	// If "true", customer can make partial payments for the link.
	LinkPartialPayments *bool `json:"link_partial_payments,omitempty"`
	// A brief description for which payment must be collected. This is shown to the customer.
	LinkPurpose string `json:"link_purpose"`
}

func (o *CreateLinkRequest) GetCustomerDetails() LinkCustomerDetailsEntity {
	if o == nil {
		return LinkCustomerDetailsEntity{}
	}
	return o.CustomerDetails
}

func (o *CreateLinkRequest) GetLinkAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.LinkAmount
}

func (o *CreateLinkRequest) GetLinkAutoReminders() *bool {
	if o == nil {
		return nil
	}
	return o.LinkAutoReminders
}

func (o *CreateLinkRequest) GetLinkCurrency() string {
	if o == nil {
		return ""
	}
	return o.LinkCurrency
}

func (o *CreateLinkRequest) GetLinkExpiryTime() *string {
	if o == nil {
		return nil
	}
	return o.LinkExpiryTime
}

func (o *CreateLinkRequest) GetLinkID() string {
	if o == nil {
		return ""
	}
	return o.LinkID
}

func (o *CreateLinkRequest) GetLinkMeta() *LinkMetaEntity {
	if o == nil {
		return nil
	}
	return o.LinkMeta
}

func (o *CreateLinkRequest) GetLinkMinimumPartialAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.LinkMinimumPartialAmount
}

func (o *CreateLinkRequest) GetLinkNotes() map[string]string {
	if o == nil {
		return nil
	}
	return o.LinkNotes
}

func (o *CreateLinkRequest) GetLinkNotify() *LinkNotifyEntity {
	if o == nil {
		return nil
	}
	return o.LinkNotify
}

func (o *CreateLinkRequest) GetLinkPartialPayments() *bool {
	if o == nil {
		return nil
	}
	return o.LinkPartialPayments
}

func (o *CreateLinkRequest) GetLinkPurpose() string {
	if o == nil {
		return ""
	}
	return o.LinkPurpose
}
