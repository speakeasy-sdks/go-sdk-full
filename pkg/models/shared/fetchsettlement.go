// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type FetchSettlementData struct {
	// Amount that is adjusted from the settlement amount.
	Adjustment *float64 `json:"adjustment,omitempty"`
	// Net amount that is settled after deducting the settlement charges and tax. (Settlement charges and tax is applicable for instant and on demand settlements.)
	AmountSettled *float64 `json:"amount_settled,omitempty"`
	// Unique ID to identify the settlement.
	CfSettlementID *int64 `json:"cf_settlement_id,omitempty"`
	// Event type is SETTLEMENT.
	EventType *string `json:"event_type,omitempty"`
	// Amount captured.
	PaymentAmount *float64 `json:"payment_amount,omitempty"`
	// The start time of time range of settlement.
	PaymentFrom *string `json:"payment_from,omitempty"`
	// The end time of time range of settlement
	PaymentTill *string `json:"payment_till,omitempty"`
	// Reason for failure.
	Reason *string `json:"reason,omitempty"`
	// Remarks on the settlement.
	Remarks *string `json:"remarks,omitempty"`
	// Service charge applicable on settlement.
	ServiceCharge *float64 `json:"service_charge,omitempty"`
	// Service tax applicable on settlement.
	ServiceTax *float64 `json:"service_tax,omitempty"`
	// Settlement tax applicable on settlement.
	SettlementCharge *float64 `json:"settlement_charge,omitempty"`
	// Date and time when the settlement was processed.
	SettlementDate *string `json:"settlement_date,omitempty"`
	// Settlement initiation time.
	SettlementInitiatedOn *string `json:"settlement_initiated_on,omitempty"`
	// Settlement charge applicable on settlement.
	SettlementTax *float64 `json:"settlement_tax,omitempty"`
	// Settlement type.
	SettlementType *string `json:"settlement_type,omitempty"`
	// Unique transaction reference number of the payment.
	SettlementUtr *string `json:"settlement_utr,omitempty"`
	// Status of the settlement.
	Status *string `json:"status,omitempty"`
}

func (o *FetchSettlementData) GetAdjustment() *float64 {
	if o == nil {
		return nil
	}
	return o.Adjustment
}

func (o *FetchSettlementData) GetAmountSettled() *float64 {
	if o == nil {
		return nil
	}
	return o.AmountSettled
}

func (o *FetchSettlementData) GetCfSettlementID() *int64 {
	if o == nil {
		return nil
	}
	return o.CfSettlementID
}

func (o *FetchSettlementData) GetEventType() *string {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *FetchSettlementData) GetPaymentAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.PaymentAmount
}

func (o *FetchSettlementData) GetPaymentFrom() *string {
	if o == nil {
		return nil
	}
	return o.PaymentFrom
}

func (o *FetchSettlementData) GetPaymentTill() *string {
	if o == nil {
		return nil
	}
	return o.PaymentTill
}

func (o *FetchSettlementData) GetReason() *string {
	if o == nil {
		return nil
	}
	return o.Reason
}

func (o *FetchSettlementData) GetRemarks() *string {
	if o == nil {
		return nil
	}
	return o.Remarks
}

func (o *FetchSettlementData) GetServiceCharge() *float64 {
	if o == nil {
		return nil
	}
	return o.ServiceCharge
}

func (o *FetchSettlementData) GetServiceTax() *float64 {
	if o == nil {
		return nil
	}
	return o.ServiceTax
}

func (o *FetchSettlementData) GetSettlementCharge() *float64 {
	if o == nil {
		return nil
	}
	return o.SettlementCharge
}

func (o *FetchSettlementData) GetSettlementDate() *string {
	if o == nil {
		return nil
	}
	return o.SettlementDate
}

func (o *FetchSettlementData) GetSettlementInitiatedOn() *string {
	if o == nil {
		return nil
	}
	return o.SettlementInitiatedOn
}

func (o *FetchSettlementData) GetSettlementTax() *float64 {
	if o == nil {
		return nil
	}
	return o.SettlementTax
}

func (o *FetchSettlementData) GetSettlementType() *string {
	if o == nil {
		return nil
	}
	return o.SettlementType
}

func (o *FetchSettlementData) GetSettlementUtr() *string {
	if o == nil {
		return nil
	}
	return o.SettlementUtr
}

func (o *FetchSettlementData) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

type FetchSettlement struct {
	// Specify a value from where you want to fetch the settlement details in the API call.
	Cursor *string               `json:"cursor,omitempty"`
	Data   []FetchSettlementData `json:"data,omitempty"`
	// Specify the number of settlements you want to fetch in the API call.
	Limit *int64 `json:"limit,omitempty"`
}

func (o *FetchSettlement) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *FetchSettlement) GetData() []FetchSettlementData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *FetchSettlement) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}
