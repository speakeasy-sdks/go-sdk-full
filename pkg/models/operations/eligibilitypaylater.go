// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/go-sdk-full/pkg/models/shared"
	"net/http"
)

type EligibilityPaylaterRequest struct {
	EligibilityCardlessEMIRequest *shared.EligibilityCardlessEMIRequest `request:"mediaType=application/json"`
	XAPIVersion                   *string                               `header:"style=simple,explode=false,name=x-api-version"`
	XClientID                     string                                `header:"style=simple,explode=false,name=x-client-id"`
	XClientSecret                 string                                `header:"style=simple,explode=false,name=x-client-secret"`
}

func (o *EligibilityPaylaterRequest) GetEligibilityCardlessEMIRequest() *shared.EligibilityCardlessEMIRequest {
	if o == nil {
		return nil
	}
	return o.EligibilityCardlessEMIRequest
}

func (o *EligibilityPaylaterRequest) GetXAPIVersion() *string {
	if o == nil {
		return nil
	}
	return o.XAPIVersion
}

func (o *EligibilityPaylaterRequest) GetXClientID() string {
	if o == nil {
		return ""
	}
	return o.XClientID
}

func (o *EligibilityPaylaterRequest) GetXClientSecret() string {
	if o == nil {
		return ""
	}
	return o.XClientSecret
}

type EligibilityPaylaterResponse struct {
	ContentType string
	// OK
	EligiblePaylaters []shared.EligiblePaylater
	Headers           map[string][]string
	StatusCode        int
	RawResponse       *http.Response
}

func (o *EligibilityPaylaterResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EligibilityPaylaterResponse) GetEligiblePaylaters() []shared.EligiblePaylater {
	if o == nil {
		return nil
	}
	return o.EligiblePaylaters
}

func (o *EligibilityPaylaterResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *EligibilityPaylaterResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EligibilityPaylaterResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
