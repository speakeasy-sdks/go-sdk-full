// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/go-sdk-full/pkg/models/shared"
	"net/http"
)

type FetchSpecificSavedInstrumentRequest struct {
	CustomerID    string  `pathParam:"style=simple,explode=false,name=customer_id"`
	InstrumentID  string  `pathParam:"style=simple,explode=false,name=instrument_id"`
	XAPIVersion   *string `header:"style=simple,explode=false,name=x-api-version"`
	XClientID     string  `header:"style=simple,explode=false,name=x-client-id"`
	XClientSecret string  `header:"style=simple,explode=false,name=x-client-secret"`
}

func (o *FetchSpecificSavedInstrumentRequest) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *FetchSpecificSavedInstrumentRequest) GetInstrumentID() string {
	if o == nil {
		return ""
	}
	return o.InstrumentID
}

func (o *FetchSpecificSavedInstrumentRequest) GetXAPIVersion() *string {
	if o == nil {
		return nil
	}
	return o.XAPIVersion
}

func (o *FetchSpecificSavedInstrumentRequest) GetXClientID() string {
	if o == nil {
		return ""
	}
	return o.XClientID
}

func (o *FetchSpecificSavedInstrumentRequest) GetXClientSecret() string {
	if o == nil {
		return ""
	}
	return o.XClientSecret
}

type FetchSpecificSavedInstrumentResponse struct {
	ContentType string
	// Any bad or invalid request will lead to following error object
	ErrorResponse *shared.ErrorResponse
	// OK
	FetchAllSavedInstruments *shared.FetchAllSavedInstruments
	Headers                  map[string][]string
	StatusCode               int
	RawResponse              *http.Response
}

func (o *FetchSpecificSavedInstrumentResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *FetchSpecificSavedInstrumentResponse) GetErrorResponse() *shared.ErrorResponse {
	if o == nil {
		return nil
	}
	return o.ErrorResponse
}

func (o *FetchSpecificSavedInstrumentResponse) GetFetchAllSavedInstruments() *shared.FetchAllSavedInstruments {
	if o == nil {
		return nil
	}
	return o.FetchAllSavedInstruments
}

func (o *FetchSpecificSavedInstrumentResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *FetchSpecificSavedInstrumentResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *FetchSpecificSavedInstrumentResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
