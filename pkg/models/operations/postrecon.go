// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/go-sdk-full/pkg/models/shared"
	"github.com/speakeasy-sdks/go-sdk-full/pkg/utils"
	"net/http"
)

type PostReconRequest struct {
	FetchPGReconRequest *shared.FetchPGReconRequest `request:"mediaType=application/json"`
	XAPIVersion         *string                     `default:"2022-09-01" header:"style=simple,explode=false,name=x-api-version"`
	XClientID           string                      `header:"style=simple,explode=false,name=x-client-id"`
	XClientSecret       string                      `header:"style=simple,explode=false,name=x-client-secret"`
}

func (p PostReconRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PostReconRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PostReconRequest) GetFetchPGReconRequest() *shared.FetchPGReconRequest {
	if o == nil {
		return nil
	}
	return o.FetchPGReconRequest
}

func (o *PostReconRequest) GetXAPIVersion() *string {
	if o == nil {
		return nil
	}
	return o.XAPIVersion
}

func (o *PostReconRequest) GetXClientID() string {
	if o == nil {
		return ""
	}
	return o.XClientID
}

func (o *PostReconRequest) GetXClientSecret() string {
	if o == nil {
		return ""
	}
	return o.XClientSecret
}

type PostReconResponse struct {
	ContentType string
	// Any bad or invalid request will lead to following error object
	ErrorResponse *shared.ErrorResponse
	// OK
	FetchPGRecon *shared.FetchPGRecon
	Headers      map[string][]string
	StatusCode   int
	RawResponse  *http.Response
}

func (o *PostReconResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostReconResponse) GetErrorResponse() *shared.ErrorResponse {
	if o == nil {
		return nil
	}
	return o.ErrorResponse
}

func (o *PostReconResponse) GetFetchPGRecon() *shared.FetchPGRecon {
	if o == nil {
		return nil
	}
	return o.FetchPGRecon
}

func (o *PostReconResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *PostReconResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostReconResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
