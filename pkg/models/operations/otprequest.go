// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/go-sdk-full/pkg/models/shared"
	"net/http"
)

type OTPRequestRequest struct {
	OTPRequest  *shared.OTPRequest `request:"mediaType=application/json"`
	PaymentID   string             `pathParam:"style=simple,explode=false,name=payment_id"`
	XAPIVersion *string            `header:"style=simple,explode=false,name=x-api-version"`
}

func (o *OTPRequestRequest) GetOTPRequest() *shared.OTPRequest {
	if o == nil {
		return nil
	}
	return o.OTPRequest
}

func (o *OTPRequestRequest) GetPaymentID() string {
	if o == nil {
		return ""
	}
	return o.PaymentID
}

func (o *OTPRequestRequest) GetXAPIVersion() *string {
	if o == nil {
		return nil
	}
	return o.XAPIVersion
}

type OTPRequestResponse struct {
	ContentType string
	// Any bad or invalid request will lead to following error object
	ErrorResponse *shared.ErrorResponse
	Headers       map[string][]string
	// OK
	OTPResponseEntity *shared.OTPResponseEntity
	StatusCode        int
	RawResponse       *http.Response
}

func (o *OTPRequestResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *OTPRequestResponse) GetErrorResponse() *shared.ErrorResponse {
	if o == nil {
		return nil
	}
	return o.ErrorResponse
}

func (o *OTPRequestResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *OTPRequestResponse) GetOTPResponseEntity() *shared.OTPResponseEntity {
	if o == nil {
		return nil
	}
	return o.OTPResponseEntity
}

func (o *OTPRequestResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *OTPRequestResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
